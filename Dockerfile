FROM phusion/baseimage:latest

ENV HOME /root

RUN /etc/my_init.d/00_regen_ssh_host_keys.sh

RUN (usermod -u 1000 www-data)
RUN (groupmod -g 1000 www-data)
#may not need to change file perms
#RUN (find / -uid 1000 -exec chown -h 5000 '{}' \+)

# persistent / runtime deps
RUN apt-get update && apt-get install -y ca-certificates curl librecode0 libsqlite3-0 libpng12-dev libxml2 zip unzip libjpeg-dev autoconf file g++ gcc libc-dev make pkg-config re2c wget nano --no-install-recommends && rm -r /var/lib/apt/lists/*

RUN echo "deb http://nginx.org/packages/ubuntu/ trusty nginx " > /etc/apt/sources.list.d/nginx.list
RUN echo "deb-src http://nginx.org/packages/ubuntu/ trusty nginx" >> /etc/apt/sources.list.d/nginx.list

RUN wget http://nginx.org/keys/nginx_signing.key
RUN apt-key add nginx_signing.key

#nginx
RUN apt-get update && \
    apt-get install -y --force-yes \
    python-software-properties\
    build-essential\
    pkg-config \
    libmcrypt-dev \
    && rm -r /var/lib/apt/lists/*
RUN apt-get update && \
    apt-get install -y --force-yes \
    nginx \
    && rm -r /var/lib/apt/lists/*
RUN echo "daemon off;" >> /etc/nginx/nginx.conf

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
##</autogenerated>##

ENV GPG_KEYS 0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3
RUN set -xe \
	&& for key in $GPG_KEYS; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
	done

ENV PHP_VERSION 5.6.18
ENV PHP_FILENAME php-5.6.18.tar.xz
ENV PHP_SHA256 54dd9106c3469bc7028644d72ac140af00655420bbaaf4a742a64e9ed02ec1b0

# --enable-mysqlnd is included below because it's harder to compile after the fact the extensions are (since it's a plugin for several extensions, not an extension in itself)
RUN buildDeps=" \
		$PHP_EXTRA_BUILD_DEPS \
		libcurl4-openssl-dev \
		libreadline6-dev \
		librecode-dev \
		libsqlite3-dev \
		libssl-dev \
		libxml2-dev \
		xz-utils \
	" \
	&& set -x \
	&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
	&& curl -fSL "http://php.net/get/$PHP_FILENAME/from/this/mirror" -o "$PHP_FILENAME" \
	&& echo "$PHP_SHA256 *$PHP_FILENAME" | sha256sum -c - \
	&& curl -fSL "http://php.net/get/$PHP_FILENAME.asc/from/this/mirror" -o "$PHP_FILENAME.asc" \
	&& gpg --verify "$PHP_FILENAME.asc" \
	&& mkdir -p /usr/src/php \
	&& tar -xf "$PHP_FILENAME" -C /usr/src/php --strip-components=1 \
	&& rm "$PHP_FILENAME"* \
	&& cd /usr/src/php \
	&& ./configure \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		$PHP_EXTRA_CONFIGURE_ARGS \
		--disable-cgi \
		--enable-mysqlnd \
		--with-curl \
		--with-openssl \
		--with-readline \
		--with-recode \
		--with-zlib \
                --enable-zip \
		--with-gd \
                --with-jpeg-dir=/usr/lib/x86_64-linux-gnu \
        --with-pdo-mysql \
        --enable-mbstring \
        --with-mcrypt \
        --enable-soap \
	&& make -j"$(nproc)" \
	&& make install \
	&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
	&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \
	&& make clean

#COPY docker-php-ext-* /usr/local/bin/

##<autogenerated>##
#WORKDIR /var/www/html

RUN set -ex \
	&& cd /usr/local/etc \
	&& if [ -d php-fpm.d ]; then \
		# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
		sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
		cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
	else \
		# PHP 5.x don't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
		mkdir php-fpm.d; \
		cp php-fpm.conf.default php-fpm.d/www.conf; \
		{ \
			echo '[global]'; \
			echo 'include=etc/php-fpm.d/*.conf'; \
		} | tee php-fpm.conf; \
	fi \
	&& { \
		echo '[global]'; \
		echo 'error_log = /proc/self/fd/2'; \
		echo; \
		echo '[www]'; \
		echo '; if we send this to /proc/self/fd/1, it never appears'; \
		echo 'access.log = /proc/self/fd/2'; \
		echo; \
		echo 'clear_env = no'; \
		echo; \
		echo '; Ensure worker stdout and stderr are sent to the main error log.'; \
		echo 'catch_workers_output = yes'; \
	} | tee php-fpm.d/docker.conf \
	&& { \
		echo '[global]'; \
		echo 'daemonize = no'; \
		echo; \
		echo '[www]'; \
		echo 'listen = [::]:9000'; \
	} | tee php-fpm.d/zz-docker.conf



RUN mkdir -p /var/www &&\
    chown -R www-data:www-data /var/www &&\
    chmod -R 777 /var/www

RUN mkdir                       /etc/service/nginx
RUN mkdir                       /etc/service/phpfpm
#ADD Dockerbuild/default         /etc/nginx/conf.d/default.conf
ADD Dockerbuild/nginx.sh        /etc/service/nginx/run
ADD Dockerbuild/phpfpm.sh       /etc/service/phpfpm/run
ADD Dockerbuild/php.ini         /usr/local/etc/php/php.ini
RUN chmod +x                    /etc/service/nginx/run
RUN chmod +x                    /etc/service/phpfpm/run

CMD ["/sbin/my_init"]
